{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","component/AddEmployee.jsx","component/EmployeeList.jsx","App.js","reportWebVitals.js","index.js"],"names":["appRender","state","action","type","employees","payload","updatedEmp","updatedEmployees","map","emp","id","filter","initialState","name","location","role","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addEmployee","editEmployee","removeEmployee","AddEmployee","handleClose","useContext","useState","setName","setLocation","setRole","useEffect","employe","Container","maxWidth","noValidate","autoComplete","Grid","container","spacing","className","item","TextField","required","label","onChange","e","target","Button","variant","color","onClick","preventDefault","newEmployees","length","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","EmployeeList","classes","open","setOpen","selectedID","setSelectedID","Card","CardContent","Typography","component","gutterBottom","CardActions","size","fullWidth","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb76e6ec.chunk.js","sourcesContent":["export default function appRender(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_EMP\":\r\n      return {\r\n        ...state,\r\n        employees: [...state.employees, action.payload],\r\n      };\r\n    case \"EDIT_EMP\":\r\n      const updatedEmp = action.payload;\r\n      const updatedEmployees = state.employees.map((emp) => {\r\n        if (emp.id === updatedEmp.id) {\r\n          return updatedEmp;\r\n        }\r\n        return emp;\r\n      });\r\n      return {\r\n        ...state,\r\n        employees: updatedEmployees,\r\n      };\r\n    case \"REMOVE_EMP\":\r\n      return {\r\n        ...state,\r\n        employees: state.employees.filter((emp) => emp.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport appRender from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  employees: [\r\n    {\r\n      id: 1,\r\n      name: \"Shailesh Parmar\",\r\n      location: \"Mumbai\",\r\n      role: \"Front-End Developer\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jitendra Parmar\",\r\n      location: \"Mumbai\",\r\n      role: \"Front-End Developer\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sumit Solanki\",\r\n      location: \"Mumbai\",\r\n      role: \"Back-End Developer\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Ankit Darji\",\r\n      location: \"Mumbai\",\r\n      role: \"PF Consultant\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appRender, initialState);\r\n\r\n  const addEmployee = (emp) => dispatch({ type: \"ADD_EMP\", payload: emp });\r\n  const editEmployee = (emp) => dispatch({ type: \"EDIT_EMP\", payload: emp });\r\n  const removeEmployee = (id) => dispatch({ type: \"REMOVE_EMP\", payload: id });\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        employees: state.employees,\r\n        addEmployee,\r\n        editEmployee,\r\n        removeEmployee,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import { Button, Container, Grid, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nfunction AddEmployee({ id, handleClose }) {\r\n  const { addEmployee, employees, editEmployee } = useContext(GlobalContext);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newEmployees = {\r\n      name,\r\n      location,\r\n      role,\r\n    };\r\n\r\n    if (id) {\r\n      newEmployees.id = id;\r\n      editEmployee(newEmployees);\r\n      handleClose();\r\n    } else {\r\n      newEmployees.id = employees.length + 1;\r\n      addEmployee(newEmployees);\r\n      setName(\"\");\r\n      setLocation(\"\");\r\n      setRole(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const [employe] = employees.filter((emp) => emp.id === id);\r\n      setName(employe.name);\r\n      setLocation(employe.location);\r\n      setRole(employe.role);\r\n    }\r\n  }, [id, employees]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <form noValidate autoComplete=\"off\">\r\n        <Grid container spacing={3} className=\"marginTop formContainer\">\r\n          <Grid item>\r\n            <TextField\r\n              required\r\n              id=\"name-required\"\r\n              label=\"Full Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              required\r\n              id=\"location-required\"\r\n              label=\"Location\"\r\n              value={location}\r\n              onChange={(e) => setLocation(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              required\r\n              id=\"role-required\"\r\n              label=\"Role\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n              {id ? \"Edit\" : \"Add\"}\r\n            </Button>\r\n            {id && (\r\n              <Button variant=\"text\" onClick={handleClose}>\r\n                <CloseIcon />\r\n              </Button>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AddEmployee;\r\n","import {\r\n  Backdrop,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Fade,\r\n  Grid,\r\n  Modal,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddEmployee from \"./AddEmployee\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction EmployeeList() {\r\n  const classes = useStyles();\r\n  const { employees, removeEmployee } = useContext(GlobalContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedID, setSelectedID] = useState(null);\r\n\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = (id) => {\r\n    setSelectedID(id);\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <>\r\n      {employees.length ? (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={3} className=\"marginTop\">\r\n            {employees.map((emp) => (\r\n              <Grid item key={emp.id}>\r\n                <Card className=\"empCard\">\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                      {emp.name}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                      {emp.location}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                      {emp.role}\r\n                      <br />\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      onClick={() => handleOpen(emp.id)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"secondary\"\r\n                      fullWidth\r\n                      onClick={() => removeEmployee(emp.id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={open}>\r\n              <div className={classes.paper}>\r\n                <AddEmployee id={selectedID} handleClose={handleClose} />\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </Container>\r\n      ) : (\r\n        <p>No Data Available</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmployeeList;\r\n","import { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\nimport AddEmployee from \"./component/AddEmployee\";\nimport EmployeeList from \"./component/EmployeeList\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Typography variant=\"h3\">CRUD With React Context API</Typography>\n        <AddEmployee />\n        <EmployeeList />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}